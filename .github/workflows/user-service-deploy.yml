# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: user-service-deploy

on:
  push:
    branches: [ "main" ]
    paths: 
      - "user-service/**"

jobs:
  build:
    name: User Service Docker Image to ECR
    runs-on: ubuntu-latest

    if: ${{ github.repository_owner == 'CS3219-AY2223S1' }} # only run deployment on master repo and not forks
    environment: cs3219-project-ay2223s1-g50 # needed to retrieve the secrets from GH environment

    defaults:
       run:
         working-directory: user-service
    steps:

    - name: Check out repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: cs3219-project-ay2223s1-g50-user
        IMAGE_TAG: latest 
        DB_USERS_CLOUD_URI: ${{ secrets.DB_USERS_CLOUD_URI }}
        REDIS_USERS_CLOUD_URI: ${{ secrets.REDIS_USERS_CLOUD_URI }}
        JWT_ACCESS_TOKEN_SECRET: ${{ secrets.JWT_ACCESS_TOKEN_SECRET }}
        JWT_REFRESH_TOKEN_SECRET: ${{ secrets.JWT_REFRESH_TOKEN_SECRET }}
      run: | 
        docker build --build-arg DB_USERS_CLOUD_URI=$DB_USERS_CLOUD_URI --build-arg REDIS_USERS_CLOUD_URI=$REDIS_USERS_CLOUD_URI --build-arg JWT_ACCESS_TOKEN_SECRET=$JWT_ACCESS_TOKEN_SECRET --build-arg JWT_REFRESH_TOKEN_SECRET=$JWT_REFRESH_TOKEN_SECRET -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Success!
      run: echo Pushed to ECR 
