# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: cs3219-project-ay2223s1-g50-question-service-deploy

on:
  push:
    branches: [ "main" ]
    paths: 
      - "question-service/**"

jobs:
  build:
    name: Question Service Docker Image to ECR
    runs-on: ubuntu-latest
    if: ${{ github.owner == 'CS3219-AY2223S1' }}  # build job runs only if merging to master repo
    defaults:
       run:
         working-directory: ./question-service
    steps:

    - name: Check out repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: cs3219-project-ay2223s1-g50-question
        IMAGE_TAG: latest 
      run: |
        docker build --build-arg DB_QUESTIONS_CLOUD_URI=secrets.DB_QUESTIONS_CLOUD_URI -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Success!
      run: echo Pushed to ECR 
